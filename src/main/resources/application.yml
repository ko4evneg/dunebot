bot:
  #TODO: split file locs for test/prod
  photos-directory: /var/dunebot/photo
  pdf-directory: /var/dunebot/pdf
  admin-pdf-directory: /var/dunebot/pdf/admin
logging:
  level:
    root: error
  charset:
    console: UTF-8
    file: UTF-8
  file:
    #TODO: split file locs for test/prod
    name: /var/dunebot/log/dunebot.log
  logback:
    rollingpolicy:
      max-file-size: 10MB

---

spring:
  config:
    activate:
      on-profile: prod, dev
  main:
    web-application-type: none
  task:
    scheduling:
      pool:
        size: 2
  sql:
    init:
      mode: never
  liquibase:
    change-log: classpath:changelog.xml
logging:
  level:
    ru.trainithard.dunebot: debug
bot:
  version: @project.version@
---

spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:postgresql://@db.hostname@:5432/postgres
    #    todo
    username: sa
    password: sa
    driver-class-name: org.postgresql.Driver
---

spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    #    todo
    username: sa
    password: sa
    driver-class-name: org.postgresql.Driver
#  jpa:
#    show-sql: true
#    properties:
#      hibernate:
#        format_sql: true
#logging:
#  level:
#    org.hibernate.orm.jdbc.bind: trace
---

spring:
  config:
    activate:
      on-profile: test
  main:
    web-application-type: none
  datasource:
    url: jdbc:h2:mem:testdb;MODE=PostgreSQL;database_to_lower=true;NON_KEYWORDS=KEY,VALUE
    username: sa
    password: password
    driver-class-name: org.h2.Driver
    hikari:
      minimum-idle: 5
  jpa:
    hibernate:
      ddl-auto: none
    database-platform: org.hibernate.dialect.H2Dialect
  sql:
    init:
      mode: embedded
      platform: h2
      schema-locations: classpath:schema.sql
  liquibase:
    enabled: false
logging:
  level:
    ru.trainithard.dunebot: error
bot:
  token: fake_token
  photos-directory: photos
  pdf-directory: pdf
  version: 1.3
