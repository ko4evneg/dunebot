package ru.trainithard.dunebot.service.telegram.factory.messaging;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import ru.trainithard.dunebot.model.Match;
import ru.trainithard.dunebot.model.MatchPlayer;
import ru.trainithard.dunebot.model.Player;
import ru.trainithard.dunebot.service.messaging.ExternalMessage;
import ru.trainithard.dunebot.util.MarkdownEscaper;

import java.util.*;
import java.util.stream.Collectors;

import static ru.trainithard.dunebot.configuration.SettingConstants.EXTERNAL_LINE_SEPARATOR;
import static ru.trainithard.dunebot.configuration.SettingConstants.NOT_PARTICIPATED_MATCH_PLACE;

@Service
public class ExternalMessageFactoryImpl implements ExternalMessageFactory {
    @Value("${bot.version}")
    private String version;

    @Override
    public ExternalMessage getGuestMessageDto(Player player) {
        return new ExternalMessage("""
                –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç DuneBot! –í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –¥–∞ –≤ –æ–ø—Ä–æ—Å–µ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤–æ–π –∏–≥—Ä–µ - —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ \
                –∏–≥—Ä—ã –≤–∞–º –ø—Ä–∏–¥–µ—Ç –æ–ø—Ä–æ—Å, –≥–¥–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —É–∫–∞–∑–∞—Ç—å –∑–∞–Ω—è—Ç–æ–µ –≤ –∏–≥—Ä–µ –º–µ—Å—Ç–æ (–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –º–∞—Ç—á–∞ –≤ \
                —Å–ª—É—á–∞–µ –ø–æ–±–µ–¥—ã) - –Ω–µ –≤–æ–ª–Ω—É–π—Ç–µ—Å—å, –±–æ—Ç –ø–æ–¥—Å–∫–∞–∂–µ—Ç —á—Ç–æ –¥–µ–ª–∞—Ç—å.""").newLine()
                .append("–¢–∞–∫–∂–µ –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã —É –±–æ—Ç–∞ –∫–∞–∫ –≥–æ—Å—Ç—å –ø–æ–¥ –∏–º–µ–Ω–µ–º ")
                .append(player.getFirstName()).append(" (").append(player.getSteamName()).append(") ").append(player.getLastName())
                .append(" - —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –∏ –Ω–µ –±—É–¥–µ—Ç–µ –≤–∫–ª—é—á–µ–Ω—ã " +
                        "–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–µ–π—Ç–∏–Ω–≥–∞.").newLine()
                .append("–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ –∫–æ–º–∞–Ω–¥—É")
                .appendBold(" '/profile –ò–º—è (–Ω–∏–∫ –≤ steam) –§–∞–º–∏–ª–∏—è'").append(".").newLine()
                .appendBold("–ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ —ç—Ç–æ  —Å–¥–µ–ª–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å.").newLine()
                .append("–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ: /help.");
    }

    @Override
    public ExternalMessage getPartialSubmittedMatchFinishMessage(Match match) {
        Player submitter = match.getSubmitter();
        String submitterMention = MarkdownEscaper.getEscapedMention(submitter.getMentionTag(), submitter.getExternalId());
        return new ExternalMessage().startBold().append("–ú–∞—Ç—á ").append(match.getId()).endBold()
                .append(" –∑–∞–≤–µ—Ä—à–µ–Ω –±–µ–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞, —Ç–∞–∫ –∫–∞–∫ –∏–≥—Ä–æ–∫ ").appendRaw(submitterMention)
                .append(" –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.");
    }

    @Override
    public ExternalMessage getFailByResubmitLimitExceededMessage(long matchId) {
        return new ExternalMessage()
                .startBold().append("–ú–∞—Ç—á ").append(matchId).endBold()
                .append(" –∑–∞–≤–µ—Ä—à–µ–Ω –±–µ–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.");
    }

    @Override
    public ExternalMessage getResubmitMessage() {
        return new ExternalMessage("–ï—Å–ª–∏ –≤—ã –∑–Ω–∞–µ—Ç–µ –≤—Å–µ –º–µ—Å—Ç–∞ –∏ –ª–∏–¥–µ—Ä–æ–≤, –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä–µ—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, " +
                                   "–∏–Ω–∞—á–µ - –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏–≥—Ä–æ–∫—É, –≤—ã–ø–æ–ª–Ω–∏–≤—à–µ–º—É –ø—Ä–µ–¥—ã–¥—É—â—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.");
    }

    @Override
    public ExternalMessage getStartMessage(Match match, List<String> regularPlayerMentions,
                                           List<String> guestPlayerMentions, List<String> blockedChatGuests) {
        ExternalMessage startMessage = new ExternalMessage()
                .startBold().append("–ú–∞—Ç—á ").append(match.getId()).endBold().append(" —Å–æ–±—Ä–∞–Ω. –£—á–∞—Å—Ç–Ω–∏–∫–∏:")
                .newLine().appendRaw(String.join(", ", regularPlayerMentions));
        if (!guestPlayerMentions.isEmpty()) {
            startMessage.newLine().newLine().appendBold("–í–Ω–∏–º–∞–Ω–∏–µ:")
                    .append(" –≤ –º–∞—Ç—á–µ –µ—Å—Ç—å –Ω–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∏. –û–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã " +
                            "–ø–æ–¥ –∏–º–µ–Ω–µ–º Vasya Pupkin –∏ —Å–º–æ–≥—É—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–µ–π –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
                    .newLine().appendRaw(String.join(", ", guestPlayerMentions));
        }
        if (!blockedChatGuests.isEmpty()) {
            startMessage.newLine().newLine().appendBold("–û—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ:")
                    .append(" —É —ç—Ç–∏—Ö –∏–≥—Ä–æ–∫–æ–≤ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã —á–∞—Ç—ã. –ë–µ–∑ –∏—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–æ–Ω—Ç–∞–∫—Ç—ã –±–æ—Ç–∞")
                    .appendBold(" –¥–æ –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –∑–∞–≤–µ—Ä—à–∏—Ç—å –¥–∞–Ω–Ω—ã–π –º–∞—Ç—á –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!")
                    .newLine().appendRaw(String.join(", ", blockedChatGuests));
        }
        return startMessage;
    }

    @Override
    public ExternalMessage getHostMessage(Player hoster, Match match, String server) {
        String mentionsRow = match.getMatchPlayers().stream()
                .map(matchPlayer -> {
                    Player player = matchPlayer.getPlayer();
                    return MarkdownEscaper.getEscapedMention(player.getMentionTag(), player.getExternalId());
                })
                .collect(Collectors.joining(", "));

        return new ExternalMessage()
                .append("–ò–≥—Ä–æ–∫ ").append(hoster.getFriendlyName()).append(" –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Å–≤–æ–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è ")
                .startBold().append("–º–∞—Ç—á–∞ ").append(match.getId()).endBold().append(".")
                .newLine().append("–°–µ—Ä–≤–µ—Ä: ").appendBold(server).newLine().newLine().appendRaw(mentionsRow);
    }

    @Override
    public ExternalMessage getMatchSuccessfulFinishMessage(Match match) {
        ExternalMessage message = new ExternalMessage();
        message.startBold().append("–ú–∞—Ç—á ").append(match.getId()).endBold().append(" –∑–∞–≤–µ—Ä—à–∏–ª—Å—è:")
                .append(EXTERNAL_LINE_SEPARATOR).append(EXTERNAL_LINE_SEPARATOR);

        Map<Integer, String> playerNamesByPlace = new LinkedHashMap<>();
        match.getMatchPlayers().stream()
                .filter(matchPlayer -> matchPlayer.getPlace() != null &&
                                       matchPlayer.getPlace() != NOT_PARTICIPATED_MATCH_PLACE)
                .sorted(Comparator.comparing(MatchPlayer::getPlace))
                .forEach(matchPlayer -> playerNamesByPlace.put(matchPlayer.getPlace(), matchPlayer.getPlayer().getFriendlyName()));
        playerNamesByPlace.forEach((place, name) -> {
            message.append(getPlaceEmoji(place)).append(" ");
            if (place.equals(1)) {
                message.append("ü•≥üçæüéâ ").append(name).append(" üéâüçæü•≥");
            } else {
                message.append(name);
            }
            message.append(EXTERNAL_LINE_SEPARATOR);
        });
        message.trimTrailingNewLine();
        return message;
    }

    private String getPlaceEmoji(Integer place) {
        return switch (place) {
            case 1 -> "1Ô∏è‚É£";
            case 2 -> "2Ô∏è‚É£";
            case 3 -> "3Ô∏è‚É£";
            case 4 -> "4Ô∏è‚É£";
            case 5 -> "5Ô∏è‚É£";
            case 6 -> "6Ô∏è‚É£";
            default -> throw new IllegalArgumentException("Can't determine place number emoji");
        };
    }

    @Override
    public ExternalMessage getPreSubmitTimeoutNotificationMessage(Match match, int timeout) {
        ExternalMessage message = new ExternalMessage()
                .appendBold("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: ").append("–æ—Å—Ç–∞–ª–æ—Å—å ").append(timeout).append(" –º–∏–Ω—É—Ç –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ")
                .startBold().append("–º–∞—Ç—á–∞ ").append(match.getId()).endBold().append("!").newLine();
        Player submitter = match.getSubmitter();
        String submitterMention = MarkdownEscaper.getEscapedMention(submitter.getMentionTag(), submitter.getExternalId());
        message.append("–ò–≥—Ä–æ–∫ ").appendRaw(submitterMention).append(" –Ω–∞—á–∞–ª –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –Ω–æ –µ—â–µ –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª –µ–≥–æ.");
        return message;
    }

    @Override
    public ExternalMessage getPlayersSubmitMessage(long matchId) {
        return new ExternalMessage("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è ")
                .startBold().append("–º–∞—Ç—á–∞ ").append(matchId).endBold()
                .append(". –ù–∞–∂–º–∏—Ç–µ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –∫–Ω–æ–ø–∫–∏ —Å –∏–º–µ–Ω–∞–º–∏ —É—á–∞—Å—Ç–≤–æ–≤–∞–≤—à–∏—Ö –∏–≥—Ä–æ–∫–æ–≤, " +
                        "–Ω–∞—á–∏–Ω–∞—è –æ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—è –ø–æ—Å–ª–µ–¥–Ω–∏–º –º–µ—Å—Ç–æ–º.");
    }

    @Override
    public ExternalMessage getLeadersSubmitMessage(long matchId) {
        return new ExternalMessage("–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –ª–∏–¥–µ—Ä–æ–≤ –¥–ª—è ")
                .startBold().append("–º–∞—Ç—á–∞ ").append(matchId).endBold()
                .append(". –ù–∞–∂–º–∏—Ç–µ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –∫–Ω–æ–ø–∫–∏ —Å –∏–º–µ–Ω–∞–º–∏ –ª–∏–¥–µ—Ä–æ–≤, " +
                        "–Ω–∞—á–∏–Ω–∞—è –æ—Ç –ª–∏–¥–µ—Ä–∞ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—è –ª–∏–¥–µ—Ä–æ–º, –∑–∞–Ω—è–≤—à–∏–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –º–µ—Å—Ç–æ.");
    }

    @Override
    public ExternalMessage getFinishedPlayersSubmitMessage(Collection<MatchPlayer> matchPlayers) {
        Long matchId = matchPlayers.stream().findFirst().orElseThrow().getMatch().getId();
        String orderedParticipants = matchPlayers.stream()
                .sorted(Comparator.comparing(matchPlayer -> Objects.requireNonNull(matchPlayer.getPlace())))
                .map(matchPlayer -> matchPlayer.getPlace() + ": " + matchPlayer.getPlayer().getFriendlyName())
                .collect(Collectors.joining(EXTERNAL_LINE_SEPARATOR));
        return new ExternalMessage("–°–ª–µ–¥—É—é—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è ")
                .startBold().append("–º–∞—Ç—á–∞ ").append(matchId).endBold()
                .append(":").newLine().append(orderedParticipants);
    }

    @Override
    public ExternalMessage getFinishedLeadersSubmitMessage(Collection<MatchPlayer> matchPlayers) {
        Long matchId = matchPlayers.stream().findFirst().orElseThrow().getMatch().getId();
        String orderedParticipants = matchPlayers.stream()
                .sorted(Comparator.comparing(matchPlayer -> Objects.requireNonNull(matchPlayer.getPlace())))
                .map(matchPlayer -> {
                    int place = matchPlayer.getPlace();
                    String playerName = matchPlayer.getPlayer().getFriendlyName();
                    String leaderName = matchPlayer.getLeader().getName();
                    return String.format("%d: %s - %s", place, playerName, leaderName);
                })
                .collect(Collectors.joining(EXTERNAL_LINE_SEPARATOR));
        return new ExternalMessage("–°–ª–µ–¥—É—é—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è ")
                .startBold().append("–º–∞—Ç—á–∞ ").append(matchId).endBold()
                .append(":").newLine().append(orderedParticipants).newLine().newLine()
                .append("–í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É '/resubmit 15000'");
    }

    @Override
    public ExternalMessage getFinishedSubmitParticipantMessage(MatchPlayer matchPlayer, String submitter, int acceptSubmitTimeout) {
        Integer place = matchPlayer.getPlace();
        String leader = matchPlayer.getLeader().getName();
        Long matchId = matchPlayer.getMatch().getId();
        return new ExternalMessage().append("–ò–≥—Ä–æ–∫ ").appendBold(submitter).append(" –∑–∞–≤–µ—Ä—à–∏–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ").startBold()
                .append("–º–∞—Ç—á–∞ ").append(matchId).endBold().newLine()
                .append("–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ - —É –≤–∞—Å –µ—Å—Ç—å ").append(acceptSubmitTimeout)
                .append(" –º–∏–Ω—É—Ç–∞ —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏—Ö. –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É '/resubmit ")
                .append(matchId).append("'.").newLine().newLine()
                .append("–ó–∞ –≤–∞–º–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã ").startBold().append(place).append(" –º–µ—Å—Ç–æ").endBold()
                .append(" –∏ –ª–∏–¥–µ—Ä ").appendBold(leader).append(".");
    }

    @Override
    public ExternalMessage getHelpMessage() {
        return new ExternalMessage()
                .startBold().append("Dunebot v").append(version).endBold().newLine().newLine()
                .append("================================").newLine()
                .appendBoldLink("–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∫ –±–æ—Ç—É", "https://github.com/ko4evneg/dunebot/blob/master/help.md").newLine()
                .append("================================").newLine().newLine()
                .appendBold("–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è").newLine().newLine()
                .appendBold("‚ÄºÔ∏è–í—Å–µ –∫–æ–º–∞–Ω–¥—ã –ø–∏—à–µ–º –Ω–∞–ø—Ä—è–º—É—é –≤ —á–∞—Ç –±–æ—Ç–∞ ").appendBold("@tabledune_bot").newLine().newLine()
                .appendBold("1Ô∏è‚É£  –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è").newLine()
                .appendInline("/profile –ò–º—è (–Ω–∏–∫_steam) –§–∞–º–∏–ª–∏—è").newLine()
                .append("'–ò–º—è' –∏ '–§–∞–º–∏–ª–∏—è' - —ç—Ç–æ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞, '–Ω–∏–∫_steam' - –≤–∞—à –Ω–∏–∫ –≤ Steam. ")
                .append("–ü–∏—Å–∞—Ç—å –≤ —Ç–∞–∫–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ –∫–∞–∫ –∏ —É–∫–∞–∑–∞–Ω–æ - –∏–º—è, –Ω–∏–∫ —Å—Ç–∏–º–∞ –≤ —Å–∫–æ–±–æ—á–∫–∞—Ö, —Ñ–∞–º–∏–ª–∏—è.").newLine()
                .append("ü™ß  –î–ª—è —Å–º–µ–Ω—ã –¥–∞–Ω–Ω—ã—Ö –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–∞ –∂–µ –∫–æ–º–∞–Ω–¥–∞, —á—Ç–æ –∏ –≤—ã—à–µ.").newLine()
                .append("üìå  ").appendInline("/profile")
                .append(" - –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–º–µ–Ω–∞ –∏–∑ Telegram –ø—Ä–æ—Ñ–∏–ª—è (–¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏).")
                .newLine().newLine()
                .appendBold("2Ô∏è‚É£  –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ç—á–∞").newLine()
                .appendInline("/new_dune").append(" - –¥–ª—è –∫–ª–∞—Å—Å–∏–∫–∏").newLine()
                .appendInline("/new_up4").append(" - –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ Uprising").newLine()
                .appendInline("/new_up6").append(" - –¥–ª—è Uprising 3—Ö3 (–¥–ª—è —ç—Ç–æ–≥–æ —Ä–µ–∂–∏–º–∞ –±–æ—Ç —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞–µ—Ç –æ–ø—Ä–æ—Å—ã)")
                .newLine().newLine()
                .appendBold("3Ô∏è‚É£  –ù–∞—á–∞–ª–æ –º–∞—Ç—á–∞").newLine()
                .append("–ñ–¥–µ–º, –ø–æ–∫–∞ –Ω–∞–π–¥—É—Ç—Å—è –≤—Å–µ –∏–≥—Ä–æ–∫–∏ - –±–æ—Ç –ø—Ä–∏—à–ª–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –∏ —Ç–µ–≥–Ω–µ—Ç –≤–∞—Å. ")
                .append("–í —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –≤—ã –Ω–∞–π–¥–µ—Ç–µ ").appendBold("ID –º–∞—Ç—á–∞").append(" - –æ–Ω –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.")
                .newLine().newLine()
                .appendBold("4Ô∏è‚É£  –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –º–∞—Ç—á–∞").newLine()
                .append("–õ—é–±–æ–π –∏–≥—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É ").appendInline("/submit X")
                .append(", –≥–¥–µ X - ID –º–∞—Ç—á–∞ –∏–∑ –ø—É–Ω–∫—Ç–∞ 3. ")
                .append("–ö–∞–∂–¥–æ–º—É –∏–≥—Ä–æ–∫—É –ø—Ä–∏–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∑–∞–Ω—è—Ç–æ–≥–æ –º–µ—Å—Ç–∞ –∏ –ª–∏–¥–µ—Ä–∞. ")
                .append("–ü–æ–±–µ–¥–∏—Ç–µ–ª—é —Ç–∞–∫–∂–µ –ø—Ä–∏–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —Å–∫—Ä–∏–Ω—à–æ—Ç–∞. –°–∫—Ä–∏–Ω—à–æ—Ç –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç—å –≤ —á–∞—Ç.")
                .newLine().newLine()
                .appendBold("5Ô∏è‚É£  –†–µ–∑—É–ª—å—Ç–∞—Ç—ã").newLine()
                .append("–í –∫–∞–Ω–∞–ª –º–∞—Ç—á–µ–π –±–æ—Ç–∞ –ø—Ä–∏–¥–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—Ç—á–∞ —Å –∑–∞–Ω—è—Ç—ã–º–∏ –º–µ—Å—Ç–∞–º–∏ ")
                .append("- —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤—Å–µ —Ö–æ—Ä–æ—à–æ –∏ –º–∞—Ç—á –∑–∞—á—Ç–µ–Ω –≤ —Ä–µ–π—Ç–∏–Ω–≥. ")
                .append("–ò–Ω–∞—á–µ –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, —á—Ç–æ –º–∞—Ç—á –∑–∞–≤–µ—Ä—à–µ–Ω –±–µ–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞, –∞ —Ç–∞–∫–∂–µ –ø—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏.")
                .newLine().newLine()
                .append("‚ùó  –ù–∞ —ç—Ç–∞–ø–µ –ø–∏–ª–æ—Ç–∞ –≤–∞–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤—Å–µ –æ—à–∏–±–∫–∏. " +
                        "–ï—Å–ª–∏ –≤–∏–¥–∏—Ç–µ, —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫-—Ç–æ –Ω–µ —Ç–∞–∫, –ø–∏—à–∏—Ç–µ –≤ –∫–∞–Ω–∞–ª —Ñ–∏–¥–±–µ–∫–∞ –±–æ—Ç–∞.");
    }
}
